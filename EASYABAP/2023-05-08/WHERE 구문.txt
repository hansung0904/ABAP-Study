4. WHERE 구문
	WHERE 조건은 SELECT 적중 수를 줄여주고 사용자가 원하는 데이터를 정확하게 선택 할 수 있도록 하는 조건
	당연한 말이지만, WHERE 조건에 사용되는 필드가 인덱스에서 사용될 때 빠른 성능을 보장한다.
	UPDATE, DELETE와 같은 명령어에도 사용된다.
	
	Ex)
		SELECT ... WHERER <s> <operator> <f> ...
		
		
	WHERE 구문에 사용되는 연산자의 종류
	연산자						의미
	EQ							같음
	=							같음
	NE							같지 않음
	<>							같지 않음
	><							같지 않음
	LT							보다 작음
	<							보다 작음
	LE							작거나 같음
	<=							작거나 같음
	GT							보다 큼
	>							보다 큼
	GE							크거나 같음
	>=							크거나 같음
	
1)	Interval 조건
		조건에 범위 값을 사용해야 할 때 사용된다.
		SELECT ... WHERE <s> [NOT ] BETWEEN <f 1> AND <f 2>
		
		예를 들어, COL 칼럼이 1~10 까지인 경우 WHERE COL1 BETWEEN 1 AND 10과 같이 사용한다.
		
2) String 비교
	문자열을 비교할 때는 LIKE 구문 사용
	ABC로 시작하는 조건을 추가하면 다음과 같이 사용한다.
	COL2 = 'ABCDEFGHIGJ'.
	SELECT ~ WHERE COL2 LIKE 'ABC%'.
	
	ABC로 시작하는 4자리 문자를 구할 경우, 예를 들어 ABCD, ABCE, ABCF, ABCG와 같이
	한자리만 비교할 경우에는 '_' 문자를 사용한다.
	
	WHERE COL2 LIKE 'ABC_'
	
3) LIST VALUE
		IN 구문을 사용해서, 여러 조건에 속한 경우의 값을 사용.
		예를 들면, '서울', '수원'에 거주하는 사람을 구할 경우 'WHERE 거주지 IN ('서울', '수원')과 같이 사용한다.
		
		SELECT ... WHERE <s> [NOT] IN (<f 1>, ... , <f n>) ...
		
4) SELECTION TABLE
		IN 구문을 사용해서 Selection Table, Range 변수에 존재하는 값들을 조회할 수 있다.
		Selection Table, Range 변수는 인터널 테이블과 유사하게 여러 Row를 지정할 수 있는 변수
		
		SELECT ... WHERE <s> [NOT ] IN <seltab>...
		
5) Dynamic 조건
		SELECT 구문의 조건을 설정하는 WHERE 구문을 동적으로 구성할 수 있다. 다음 구문의 itab은 최대 72자리의 Internal Table로 선언되어야 한다.
		SELECT ... WHERE (<itab>) ...
		
6) FOR ALL ENTRIES 구문
		SELECT ... FOR ALL ENTREIS IN <itab> WHERE <cond>
		
		FOR ALL ENTRY 구문은 인터넬 테이블과 데이터베이스의 테이블을 JOIN 하는 개념과 비슷
		이것도 LOOP을 돌면서 SQL을 수행 DB에 반복적으로 접근하기 때문에 데이터베이스 테이블간의 JOIN 보다는 비효율적일 수 있지만
		ABAP 언어에서 많은 경우에 유용하게 활용된다
		
		• itab의 칼럼과 비교 대상 테이블의 칼럼 타입은 같아야 한다.
		• LIKE, BETWEEN, IN과 같은 비교 구문은 사용할 수 x
		• itab의 중복된 값은 하나만 남는다 (Unique Key 기준).
		• itab이 NULL이면 모든 데이터를 읽어버림.
		• itab의 수가 많으면 LOOP 수가 증가하게 되므로 SELECT 속도가 줄어들게 된다. 예를 들어 itab의 수가 3개라면
		  'SELECT ~ ENDSELECT.' 가 3번 수행된다.
		  