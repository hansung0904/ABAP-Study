OPEN SQL은 데이터베이스의 종류에 상관없이 ABAP Dictionary에서 선언한 모든 오브젝트를 조회할 수 있음.
NATIVE SQL은 데이터 베이스 종류에 따라 사용할 수 있는 SQL 구문이 다름.

장점
ABAP Dictionary에 생성되지 않은 테이블에 접근할 수 있음
데이터베이스에 의존적인 SQL 구문이므로 OPEN SQL에서는 구현할 수 없는 정밀한 SQL이 가능.

단점
EXEC ~ ENDEXEC 사이의 구문 점검이 수행되지 않으므로 Dump Error가 발생할 수 있음
NATIVE SQL이 포함단 ABAP 프로그램은 다른 DB를 사용하는 환경에서는 적용할 수 없음.
Client를 구분하는 MANDT 필드를 SQL 구문 내에 반드시 포함해야 한다.

1 기본 구문
	NATIVE SQL은 DB 종류에 따라 사용할 수 있는 SQL 구문이 다르다. 기본 구문은 EXEC SQL.로 시작해서
	ENDXEC.로 종료한다. 그리고 변수명 앞에는 콜론 기호를 추가해주어야 한다.
	그리고 NATIVE SQL에는 클라이언트 구분자인 MANDT 필드를 반드시 기술해야한다.
	
		EXEC SQL.
			<NATIVE SQL STATEMENT>
		ENDEXEC.

	NATIVE SQL을 사용할 때는 반드시 MANDT 필드를 WHERE 조건에 추가해야 함.
	그렇지 않으면, 인덱스를 활용하지 못하고 테이블 전체를 FULL SCAN하여 성능에 문제를 일으킬 수 있음.
	
2 Native SQL과 인터널 테이블
	PERFORMING 구문을 사용하여 한 번에 여러 개의 데이터를 Internal Table에 삽입할 수 있다.
	PERFORMING 구문은 SELECT 구문이 한 라인을 읽어올 때마다 Subroutine을 실행하게 된다.
	
		EXEC SQL PERFORMING <form>.
			<NATIVE SQL statement>
		ENDEXEC.
